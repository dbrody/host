#!/usr/bin/env ruby

#Copyright (c) 2014, IDEO

$: << File.expand_path(File.join(File.dirname(__FILE__), '..', "config"))
$: << File.expand_path(File.join(File.dirname(__FILE__), '..', "lib"))
$: << File.expand_path(File.join(File.dirname(__FILE__), '..', "web"))

begin
  require "rubygems"
  require 'hacks/em_patches'
  require 'em/pure_ruby'
  require 'timeout'

  require 'noam_web'
  require 'noam_server/noam_main'
  require 'noam_server/noam_logging'

  server = NoamServer::NoamMain.new

  ARGV.each do |a|
    if a == '--debug'
      NoamServer::NoamLogging.instance.setLevel(:debug)
    elsif a == '--info'
      NoamServer::NoamLogging.instance.setLevel(:info)
    end
  end

  def fire_server_started_callback
    if defined?($noam_server_started_action)
      $noam_server_started_action.call
    end
  end

  def shutdown_cleanly
    NoamServer::NoamLogging.info("NoamServer", "Closing Noam Server.")
    NoamServer::NoamLogging.shutdown
    EM.stop
  end

  EM::run do
    server.start
    NoamApp.log_info
    NoamApp.run!

    EM::defer do
      fire_server_started_callback
    end

    ["INT", "TERM", "QUIT"].each do |signal|
      trap(signal) do
        shutdown_cleanly
      end
    end

    EventMachine.add_periodic_timer(3) do
      if Process.ppid == 1
        # the parent process has died
        shutdown_cleanly
      end
    end
  end
rescue Exception => e
  system("echo 'Begin Log' >> /tmp/noam.log");
  system("date >> /tmp/noam.log");
  system("echo '#{e.to_s.gsub(/'/, '"')}' >> /tmp/noam.log");
  puts e
  e.backtrace.each do |line|
    system("echo '#{line.gsub(/'/, '"')}' >> /tmp/noam.log")
    puts line
  end
end
